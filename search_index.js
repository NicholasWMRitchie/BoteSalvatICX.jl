var documenterSearchIndex = {"docs":
[{"location":"Example/#Bote-Salvat-Ionization-Cross-Section","page":"Using BoteSalvatICX","title":"Bote-Salvat Ionization Cross-Section","text":"","category":"section"},{"location":"Example/","page":"Using BoteSalvatICX","title":"Using BoteSalvatICX","text":"This notebook shows how to use the BoteSalvatICX.jl  It uses the optional Gadfly plotting support to plot the cross-section from threshold to 1 GeV.","category":"page"},{"location":"Example/","page":"Using BoteSalvatICX","title":"Using BoteSalvatICX","text":"using BoteSalvatICX\nusing Gadfly","category":"page"},{"location":"Example/","page":"Using BoteSalvatICX","title":"Using BoteSalvatICX","text":"When Gadfly is imported, you can plot the ionization cross-sections for electron impact on the elements.","category":"page"},{"location":"Example/","page":"Using BoteSalvatICX","title":"Using BoteSalvatICX","text":"set_default_plot_size(10inch, 4inch)\nhstack(plot(BoteSalvat2009, 6), plot(BoteSalvat2009, 92))","category":"page"},{"location":"Example/","page":"Using BoteSalvatICX","title":"Using BoteSalvatICX","text":"(Image: )","category":"page"},{"location":"Example/","page":"Using BoteSalvatICX","title":"Using BoteSalvatICX","text":"BoteSalvatICX.jl exports three methods for accessing the cross-section, the available sub-shells and edge energies.","category":"page"},{"location":"Example/","page":"Using BoteSalvatICX","title":"Using BoteSalvatICX","text":"You can determine whether the algorithm is implemented for the specified sub-shell using hasedge(::Type{BoteSalvat2009}, z::Integer, subshell::Int).  Elements are identified by atomic number and sub-shells are indexed in K, L₁, L₂, L₃, M₁, M₂, M₃, M₄, M₅... order as 1, 2, 3, 4, 5, 6, 7, 8, 9 respectively.  The most of the sub-shells that are typically ionized in X-ray and Auger events have been implemented.  However, no N-sub-shell cross-sections are available.","category":"page"},{"location":"Example/","page":"Using BoteSalvatICX","title":"Using BoteSalvatICX","text":"(hasedge(BoteSalvat2009, 6, 1), hasedge(BoteSalvat2009, 6, 2), hasedge(BoteSalvat2009, 92, 9), hasedge(BoteSalvat2009, 92, 10) )","category":"page"},{"location":"Example/","page":"Using BoteSalvatICX","title":"Using BoteSalvatICX","text":"(true, false, true, false)","category":"page"},{"location":"Example/","page":"Using BoteSalvatICX","title":"Using BoteSalvatICX","text":"The edge-energies can be accessed via edgeenergy(BoteSalvat2009, z::Integer, shell::Int).  All energies are in eV.","category":"page"},{"location":"Example/","page":"Using BoteSalvatICX","title":"Using BoteSalvatICX","text":"(edgeenergy(BoteSalvat2009, 6, 1), edgeenergy(BoteSalvat2009, 92, 9))","category":"page"},{"location":"Example/","page":"Using BoteSalvatICX","title":"Using BoteSalvatICX","text":"(291.001, 3554.1)","category":"page"},{"location":"Example/","page":"Using BoteSalvatICX","title":"Using BoteSalvatICX","text":"The ionization cross-section is access using ionizationcrosssection(::Type{BoteSalvat2009}, z::Int, subshell::Int, energy::AbstractFloat, edgeenergy::AbstractFloat).  The result is in cm²/atom.  To convert to the conventional atomic cross-section unit barns, multiply by 10²⁴ barns/cm².","category":"page"},{"location":"Example/","page":"Using BoteSalvatICX","title":"Using BoteSalvatICX","text":"1.0e24*[ionizationcrosssection(BoteSalvat2009, 6, 1, 600.0, edgeenergy(BoteSalvat2009, 6,1)), ionizationcrosssection(BoteSalvat2009, 92, 9, 7000.0, edgeenergy(BoteSalvat2009, 92, 9))]","category":"page"},{"location":"Example/","page":"Using BoteSalvatICX","title":"Using BoteSalvatICX","text":"2-element Array{Float64,1}:\n 315881.4942844842\n  11050.381033393129","category":"page"},{"location":"Example/","page":"Using BoteSalvatICX","title":"Using BoteSalvatICX","text":"At or below the ionization edge, the function returns 0.","category":"page"},{"location":"Example/","page":"Using BoteSalvatICX","title":"Using BoteSalvatICX","text":"1.0e24*[ionizationcrosssection(BoteSalvat2009, 6, 1, edgeenergy(BoteSalvat2009, 6, 1), edgeenergy(BoteSalvat2009, 6, 1)), ionizationcrosssection(BoteSalvat2009, 92, 9, 3000.0, edgeenergy(BoteSalvat2009, 92, 9))]","category":"page"},{"location":"Example/","page":"Using BoteSalvatICX","title":"Using BoteSalvatICX","text":"2-element Array{Float64,1}:\n 0.0\n 0.0","category":"page"},{"location":"#BoteSalvatICX","page":"Home","title":"BoteSalvatICX","text":"","category":"section"},{"location":"#Implements-the-Bote-Salvat-Ionization-Cross-Section","page":"Home","title":"Implements the Bote-Salvat Ionization Cross Section","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"These functions deliver the total cross section for electron impact ionization of K, L and M sub-shells of neutral atoms of the elements from hydrogen (Z=1) to einsteinium (Z=99). The model is a parameterization of numerical cross sections computed with the distorted-wave and the plane-wave first-Born approximations.","category":"page"},{"location":"#References:","page":"Home","title":"References:","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"D. Bote and F. Salvat, Calculations of inner-shell ionization by electron impact with the distorted-wave and plane-wave Born approximations, Phys. Rev. A77, 042701 (2008).\nD. Bote et al., Cross sections for ionization of K, L and M shells of atoms by impact of electrons and positrons with energies up to 1 GeV.  Analytical formulas, Atomic Data and Nuclear Data Tables 95.6 (2009) 871-909.","category":"page"},{"location":"#Using-BoteSalvatICX","page":"Home","title":"Using BoteSalvatICX","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"The Jupyter notebook in docs/src provides examples.","category":"page"},{"location":"","page":"Home","title":"Home","text":"The package was designed to minimize dependencies while providing a focused set of functionality.","category":"page"},{"location":"","page":"Home","title":"Home","text":"Modules = [BoteSalvatICX]","category":"page"},{"location":"#BoteSalvatICX.edgeenergy-Tuple{Type{BoteSalvat2009},Integer,Int64}","page":"Home","title":"BoteSalvatICX.edgeenergy","text":"edgeenergy(::Type{BoteSalvat2009}, z::Integer, subshell::Int)\n\nThe default value for the edge energy as provided by Bote & Salvat (in eV).\n\nz is the atomic number 1:99\nsubshell is 1->K, 2->L₁, 3->L₂, ..., 9->M₅\n\n\n\n\n\n","category":"method"},{"location":"#BoteSalvatICX.hasedge-Tuple{Type{BoteSalvat2009},Integer,Int64}","page":"Home","title":"BoteSalvatICX.hasedge","text":"hasedge(::Type{BoteSalvat2009}, z::Integer, subshell::Int)\n\nIs data available for the the specified element and sub-shell?\n\nz is the atomic number 1:99\nsubshell is 1->K, 2->L₁, 3->L₂, ..., 9->M₅\n\n\n\n\n\n","category":"method"},{"location":"#BoteSalvatICX.ionizationcrosssection","page":"Home","title":"BoteSalvatICX.ionizationcrosssection","text":"ionizationcrosssection(\n     ::Type{BoteSalvat2009},\n     z::Int,\n     subshell::Int,\n     energy::AbstractFloat,\n     edgeenergy::AbstractFloat = edgeenergy(BoteSalvat2009, z, subshell),\n )\n\nComputes the inner sub-shell ionization cross section for energetic electrons. Asserts if z or subshell is out of range. Use is hasedge(BoteSalvat2009, ...) to determine whether an element/sub-shell pair is available.\n\nz : The atomic number z in the range 1:99\nsubshell : The atomic sub-shell being ionized 1->K, 2->L₁, 3->L₂, ..., 9->M₅\nenergy : The kinetic energy of the incident electron in eV\nedgeenergy : The edge energy of the sub-shell in eV\n\n\n\n\n\n","category":"function"}]
}
